
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "source/auto_examples/plot_examples.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_source_auto_examples_plot_examples.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_plot_examples.py:


Example on retrieving and plotting winds
----------------------------------------

This is a simple example for how to retrieve and plot winds from 2 radars
using PyDDA.

Author: Robert C. Jackson

.. GENERATED FROM PYTHON SOURCE LINES 11-61



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /source/auto_examples/images/sphx_glr_plot_examples_001.png
         :alt: PyDDA retreived winds @4.05 km
         :srcset: /source/auto_examples/images/sphx_glr_plot_examples_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /source/auto_examples/images/sphx_glr_plot_examples_002.png
         :alt: PyDDA retreived winds @20.0 km south of origin.
         :srcset: /source/auto_examples/images/sphx_glr_plot_examples_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /source/auto_examples/images/sphx_glr_plot_examples_003.png
         :alt: PyDDA retreived winds @20.0 km west of origin.
         :srcset: /source/auto_examples/images/sphx_glr_plot_examples_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /usr/share/miniconda3/envs/pydda-docs/lib/python3.10/site-packages/pyart/io/cfradial.py:376: UserWarning: WARNING: valid_min not used since it
    cannot be safely cast to variable data type
      data = self.ncvar[:]
    /usr/share/miniconda3/envs/pydda-docs/lib/python3.10/site-packages/pyart/io/cfradial.py:376: UserWarning: WARNING: valid_max not used since it
    cannot be safely cast to variable data type
      data = self.ncvar[:]
    /home/runner/work/PyDDA/PyDDA/pydda/retrieval/angles.py:24: RuntimeWarning: invalid value encountered in arccos
      elev = np.arccos((Re**2 + slantrsq - rh**2)/(2 * Re * slantr))
    Calculating weights for radars 0 and 1
    Calculating weights for models...
    Starting solver 
    rmsVR = 6.776540662375731
    Total points: 92100
    The max of w_init is 0.0
    Initial constraint violation:  0.000000
    Initial Lagrangian norm:  106.766222
    Iter:  1
    Jvel:  tf.Tensor(1.8308261338948282, shape=(), dtype=float64)
    Constraint violation:  0.6818282075000475
    Maximum mass continuity violation:  0.027032187382017923
    Lagrangian norm:  0.333181
    Added most recent point to filter
    Restoration phase, mu = : 10.0
    Iter:  2
    Jvel:  tf.Tensor(776.0735097684178, shape=(), dtype=float64)
    Constraint violation:  tf.Tensor(0.32457978698080797, shape=(), dtype=float64)
    Maximum mass continuity violation:  0.027032187382017923
    Lagrangian norm:  8.965855
    Added most recent point to filter
    Restoration phase, mu = : 100.0
    Iter:  3
    Jvel:  tf.Tensor(0.18090889817168548, shape=(), dtype=float64)
    Constraint violation:  tf.Tensor(0.431208616080527, shape=(), dtype=float64)
    Maximum mass continuity violation:  0.01814822569066563
    Lagrangian norm:  0.075149
    Added most recent point to filter
    Restoration phase, mu = : 1000.0
    Iter:  4
    Jvel:  tf.Tensor(931.0958250692948, shape=(), dtype=float64)
    Constraint violation:  tf.Tensor(0.23440116380932383, shape=(), dtype=float64)
    Maximum mass continuity violation:  0.018148202062705898
    Lagrangian norm:  9.954166
    Added most recent point to filter
    Restoration phase, mu = : 10000.0
    Iter:  5
    Jvel:  tf.Tensor(1.638373406159619, shape=(), dtype=float64)
    Constraint violation:  tf.Tensor(0.2860483774171418, shape=(), dtype=float64)
    Maximum mass continuity violation:  0.011858196401085843
    Lagrangian norm:  0.307412
    Added most recent point to filter
    Iter:  6
    Jvel:  tf.Tensor(3.0877579759907574, shape=(), dtype=float64)
    Constraint violation:  0.051330460782699754
    Maximum mass continuity violation:  0.0015490391557233488
    Lagrangian norm:  0.262021
    AugLag converged to specified tolerance
    Applying low pass filter to wind field...
    Done! Time = 81.0
    /home/runner/work/PyDDA/PyDDA/pydda/vis/barb_plot.py:213: UserWarning: The following kwargs were not used by contour: 'color'
      ax.contour(
    /home/runner/work/PyDDA/PyDDA/pydda/vis/barb_plot.py:213: UserWarning: The following kwargs were not used by contour: 'color'
      ax.contour(






|

.. code-block:: default


    import pyart
    import pydda
    import numpy as np
    from matplotlib import pyplot as plt


    berr_grid = pyart.io.read_grid(pydda.tests.EXAMPLE_RADAR0)
    cpol_grid = pyart.io.read_grid(pydda.tests.EXAMPLE_RADAR1)


    # Load sounding data and insert as an intialization
    u_init, v_init, w_init = pydda.initialization.make_constant_wind_field(
            cpol_grid, (0.0, 0.0, 0.0), vel_field='corrected_velocity')

    # Start the wind retrieval. This example only uses the mass continuity
    # and data weighting constraints.
    Grids = pydda.retrieval.get_dd_wind_field([berr_grid, cpol_grid], u_init,
                                              v_init, w_init, Co=1.0, Cm=1.0,
                                              Jveltol=1e-3, cvtol=1e-4,
                                              Cx=0.0, Cy=0., Cz=0.0, Cb=0., 
                                              frz=5000.0, filter_window=5,
                                              mask_outside_opt=True, upper_bc=1,
                                              wind_tol=0.5, engine="auglag")
    # Plot a horizontal cross section
    plt.figure(figsize=(9, 9))
    pydda.vis.plot_horiz_xsection_barbs(Grids, background_field='reflectivity',
                                        level=6,
                                        w_vel_contours=[5, 10, 15],
                                        barb_spacing_x_km=5.0,
                                        barb_spacing_y_km=15.0)
    plt.show()
    plt.savefig("Darwin_horiz.png")

    # Plot a vertical X-Z cross section
    plt.figure(figsize=(9, 9))
    pydda.vis.plot_xz_xsection_barbs(Grids, background_field='reflectivity',
                                     level=40,
                                     w_vel_contours=[5, 10, 15],
                                     barb_spacing_x_km=10.0,
                                     barb_spacing_z_km=2.0)
    plt.show()

    # Plot a vertical Y-Z cross section
    plt.figure(figsize=(9, 9))
    pydda.vis.plot_yz_xsection_barbs(Grids, background_field='reflectivity', 
                                     level=40,
                                     barb_spacing_y_km=10.0,
                                     barb_spacing_z_km=2.0)
    plt.savefig('Darwin.png')


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  22.648 seconds)


.. _sphx_glr_download_source_auto_examples_plot_examples.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_examples.py <plot_examples.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_examples.ipynb <plot_examples.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
