
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "source/auto_examples/plot_fun_with_constraints.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_source_auto_examples_plot_fun_with_constraints.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_plot_fun_with_constraints.py:


Example on geographic plotting and constraint variation
-------------------------------------------------------

In this example we show how to plot wind fields on a map and change
the default constraint coefficients using PyDDA.

This shows how important it is to have the proper intitial state and
constraints when you derive your wind fields. In the first figure,
the sounding was used as the initial state, but for the latter
two examples we use a zero initial state which provides for more 
questionable winds at the edges of the Dual Doppler Lobes. 

This shows that your initial state and background are key to 
providing a physically realistic retrieval. Assuming a zero
background will likely result in false regions of convergence
and divergence that will generate artificial updrafts and downdrafts
at the edges of data coverage.

.. GENERATED FROM PYTHON SOURCE LINES 21-88



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /source/auto_examples/images/sphx_glr_plot_fun_with_constraints_001.png
         :alt: PyDDA retreived winds @10.0 km south of origin.
         :srcset: /source/auto_examples/images/sphx_glr_plot_fun_with_constraints_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /source/auto_examples/images/sphx_glr_plot_fun_with_constraints_002.png
         :alt: PyDDA retreived winds @10.0 km south of origin.
         :srcset: /source/auto_examples/images/sphx_glr_plot_fun_with_constraints_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /source/auto_examples/images/sphx_glr_plot_fun_with_constraints_003.png
         :alt: PyDDA retreived winds @10.0 km south of origin.
         :srcset: /source/auto_examples/images/sphx_glr_plot_fun_with_constraints_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /source/auto_examples/images/sphx_glr_plot_fun_with_constraints_004.png
         :alt: PyDDA retreived winds @10.0 km south of origin.
         :srcset: /source/auto_examples/images/sphx_glr_plot_fun_with_constraints_004.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /usr/share/miniconda3/envs/pydda-docs/lib/python3.10/site-packages/pyart/io/cfradial.py:408: UserWarning: WARNING: valid_min not used since it
    cannot be safely cast to variable data type
      data = self.ncvar[:]
    /usr/share/miniconda3/envs/pydda-docs/lib/python3.10/site-packages/pyart/io/cfradial.py:408: UserWarning: WARNING: valid_max not used since it
    cannot be safely cast to variable data type
      data = self.ncvar[:]
    Interpolating sounding to radar grid
    Interpolated U field:
    tf.Tensor(
    [  0.60573435   1.0229144    6.434673    11.977132    12.919597
       9.719978    14.212554    17.673002     9.373551     4.932108
       7.0470777    4.581866     3.8447456    1.9784147   -2.7835784
      -4.8090096   -8.388001    -8.310871    -6.199968    -8.8743305
      -7.5828705   -6.553336    -7.493186    -8.902025   -11.6616335
     -13.175965   -15.263804   -16.580751   -17.48236    -23.17236
     -20.712376   -18.823587   -16.356308   -25.138748   -29.280111
     -28.940443   -19.437548   -10.714591    -9.689518  ], shape=(39,), dtype=float32)
    Interpolated V field:
    tf.Tensor(
    [-6.9235525  -6.326603   -6.434671   -6.9149985  -6.5828586  -3.927123
     -6.6274214  -8.241055   -9.051932   -3.2364333   0.8652741  -1.430016
      0.54577833 -1.4374017  -0.30149823  3.5418017   4.45998     5.19321
      5.667021    7.446448   10.062807   10.487528   11.109102   10.993081
      9.54446    11.055948    9.912431   11.183857    9.295537    2.4355142
     -0.723292   -1.9784379   1.1915643   5.803736    3.5951443  -2.0237138
      2.7317686   6.437976    2.7784247 ], shape=(39,), dtype=float32)
    Grid levels:
    [ 1000.  1500.  2000.  2500.  3000.  3500.  4000.  4500.  5000.  5500.
      6000.  6500.  7000.  7500.  8000.  8500.  9000.  9500. 10000. 10500.
     11000. 11500. 12000. 12500. 13000. 13500. 14000. 14500. 15000. 15500.
     16000. 16500. 17000. 17500. 18000. 18500. 19000. 19500. 20000.]
    /home/runner/work/PyDDA/PyDDA/pydda/retrieval/angles.py:24: RuntimeWarning: invalid value encountered in arccos
      elev = np.arccos((Re**2 + slantrsq - rh**2)/(2 * Re * slantr))
    Calculating weights for radars 0 and 1
    Calculating weights for models...
    Starting solver 
    rmsVR = 7.569366
    Total points: 40597
    The max of w_init is 0.0
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
          0|227006.5312|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000
    The gradient of the cost functions is 15.765782
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
         10| 798.9404| 262.0650|   0.0000|  92.1892|   0.0000|   0.0000|   0.0000|  16.4363
    The gradient of the cost functions is 3.775127
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
         20|  70.4062| 261.4582|   0.0000|  15.5403|   0.0000|   0.0000|   0.0000|  16.6119
    The gradient of the cost functions is 2.486944
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
         30|  42.5827| 236.0992|   0.0000|  21.5919|   0.0000|   0.0000|   0.0000|  16.8993
    The gradient of the cost functions is 1.9591132
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
         40| 156.1865| 175.6451|   0.0000|   3.0855|   0.0000|   0.0000|   0.0000|  18.3335
    The gradient of the cost functions is 3.3954563
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
         50|  40.0115| 164.1694|   0.0000|   8.9026|   0.0000|   0.0000|   0.0000|  18.2963
    The gradient of the cost functions is 1.9753311
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
         60|  34.9998| 131.6419|   0.0000|  10.6925|   0.0000|   0.0000|   0.0000|  19.9064
    The gradient of the cost functions is 1.3459452
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
         70| 122.0445| 106.7078|   0.0000|   6.4111|   0.0000|   0.0000|   0.0000|  23.7857
    The gradient of the cost functions is 1.919298
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
         80|  25.0918| 107.4190|   0.0000|   4.7473|   0.0000|   0.0000|   0.0000|  22.4506
    The gradient of the cost functions is 1.1438186
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
         90|  23.5661|  96.6370|   0.0000|   5.3020|   0.0000|   0.0000|   0.0000|  23.9493
    The gradient of the cost functions is 0.8664731
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        100|  58.7366|  80.2433|   0.0000|   5.5324|   0.0000|   0.0000|   0.0000|  26.4497
    The gradient of the cost functions is 1.6036438
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        110|  23.9749|  80.3906|   0.0000|   4.5341|   0.0000|   0.0000|   0.0000|  26.0857
    The gradient of the cost functions is 1.0014253
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        120|  24.3254|  70.9481|   0.0000|   5.0393|   0.0000|   0.0000|   0.0000|  27.6238
    The gradient of the cost functions is 0.7556137
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        130|  57.4863|  62.3165|   0.0000|   5.1442|   0.0000|   0.0000|   0.0000|  30.5741
    The gradient of the cost functions is 1.2131487
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        140|  22.3289|  62.0446|   0.0000|   4.2503|   0.0000|   0.0000|   0.0000|  29.5601
    The gradient of the cost functions is 0.70997024
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        150|  21.6329|  58.2340|   0.0000|   4.2794|   0.0000|   0.0000|   0.0000|  30.5074
    The gradient of the cost functions is 0.6026815
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        160|  43.8735|  52.5502|   0.0000|   4.5331|   0.0000|   0.0000|   0.0000|  32.6026
    The gradient of the cost functions is 0.9876782
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        170|  20.5929|  52.6540|   0.0000|   3.9946|   0.0000|   0.0000|   0.0000|  31.8463
    The gradient of the cost functions is 0.6153369
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        180|  20.6037|  49.4716|   0.0000|   4.0382|   0.0000|   0.0000|   0.0000|  32.5898
    The gradient of the cost functions is 0.54981214
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        190|  39.6146|  44.5406|   0.0000|   4.7019|   0.0000|   0.0000|   0.0000|  34.3811
    The gradient of the cost functions is 0.9166274
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        200|  20.0920|  44.7488|   0.0000|   3.9069|   0.0000|   0.0000|   0.0000|  33.8344
    The gradient of the cost functions is 0.49955428
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        210|  19.8512|  42.6805|   0.0000|   3.8875|   0.0000|   0.0000|   0.0000|  34.4902
    The gradient of the cost functions is 0.45718437
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        220|  19.6944|  41.0311|   0.0000|   3.7292|   0.0000|   0.0000|   0.0000|  35.0349
    The gradient of the cost functions is 4.074721
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        230|  19.5731|  39.8474|   0.0000|   3.8243|   0.0000|   0.0000|   0.0000|  35.3941
    The gradient of the cost functions is 0.4398829
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        240|  19.5817|  37.9599|   0.0000|   3.8322|   0.0000|   0.0000|   0.0000|  35.9772
    The gradient of the cost functions is 0.601152
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        250|  19.7890|  36.1591|   0.0000|   3.7513|   0.0000|   0.0000|   0.0000|  36.5617
    The gradient of the cost functions is 3.3162231
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        260|  19.5798|  35.1801|   0.0000|   3.8370|   0.0000|   0.0000|   0.0000|  36.9104
    The gradient of the cost functions is 0.36143792
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        270|  19.4164|  33.8990|   0.0000|   3.7632|   0.0000|   0.0000|   0.0000|  37.4345
    The gradient of the cost functions is 0.4985511
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        280|  19.4257|  32.8054|   0.0000|   3.7336|   0.0000|   0.0000|   0.0000|  37.8781
    The gradient of the cost functions is 2.4994972
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        290|  19.2166|  32.1819|   0.0000|   3.8260|   0.0000|   0.0000|   0.0000|  38.1159
    The gradient of the cost functions is 0.3492622
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        300|  19.2184|  31.0571|   0.0000|   3.7642|   0.0000|   0.0000|   0.0000|  38.5379
    The gradient of the cost functions is 0.45480004
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        310|  19.3053|  30.0389|   0.0000|   3.7290|   0.0000|   0.0000|   0.0000|  38.9677
    The gradient of the cost functions is 1.9424773
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        320|  19.0392|  29.5587|   0.0000|   3.8045|   0.0000|   0.0000|   0.0000|  39.1578
    The gradient of the cost functions is 0.28130755
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        330|  19.0045|  28.7662|   0.0000|   3.7589|   0.0000|   0.0000|   0.0000|  39.4800
    The gradient of the cost functions is 0.42544237
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        340|  19.2978|  27.8318|   0.0000|   3.6798|   0.0000|   0.0000|   0.0000|  39.8729
    The gradient of the cost functions is 1.5602194
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        350|  18.9595|  27.4496|   0.0000|   3.8162|   0.0000|   0.0000|   0.0000|  39.9973
    The gradient of the cost functions is 0.27125484
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        360|  19.0589|  26.7259|   0.0000|   3.7697|   0.0000|   0.0000|   0.0000|  40.2595
    The gradient of the cost functions is 0.36699346
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        370|  19.3618|  25.8538|   0.0000|   3.7338|   0.0000|   0.0000|   0.0000|  40.6152
    The gradient of the cost functions is 1.3632092
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        380|  19.0516|  25.5217|   0.0000|   3.8245|   0.0000|   0.0000|   0.0000|  40.7722
    The gradient of the cost functions is 0.23832059
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        390|  18.9615|  25.0573|   0.0000|   3.7382|   0.0000|   0.0000|   0.0000|  41.0480
    The gradient of the cost functions is 0.32191452
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        400|  18.9661|  24.6184|   0.0000|   3.7799|   0.0000|   0.0000|   0.0000|  41.3717
    The gradient of the cost functions is 1.0205659
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        410|  18.7040|  24.4599|   0.0000|   3.7276|   0.0000|   0.0000|   0.0000|  41.4622
    The gradient of the cost functions is 0.21799348
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        420|  18.6395|  24.0958|   0.0000|   3.6955|   0.0000|   0.0000|   0.0000|  41.6748
    The gradient of the cost functions is 0.30029142
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        430|  18.7458|  23.5211|   0.0000|   3.8395|   0.0000|   0.0000|   0.0000|  42.0104
    The gradient of the cost functions is 0.82186353
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        440|  18.6378|  23.3160|   0.0000|   3.6481|   0.0000|   0.0000|   0.0000|  42.0829
    The gradient of the cost functions is 0.18990536
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        450|  18.5769|  22.9152|   0.0000|   3.7050|   0.0000|   0.0000|   0.0000|  42.2731
    The gradient of the cost functions is 0.25963724
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        460|  18.8211|  22.3100|   0.0000|   3.8891|   0.0000|   0.0000|   0.0000|  42.5396
    The gradient of the cost functions is 0.6695355
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        470|  18.7089|  22.1514|   0.0000|   3.6996|   0.0000|   0.0000|   0.0000|  42.5922
    The gradient of the cost functions is 0.19345142
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        480|  18.6793|  21.7972|   0.0000|   3.7401|   0.0000|   0.0000|   0.0000|  42.7504
    The gradient of the cost functions is 0.21439101
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        490|  18.8584|  21.3510|   0.0000|   3.8816|   0.0000|   0.0000|   0.0000|  42.9888
    The gradient of the cost functions is 0.54369783
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        500|  18.6464|  21.2418|   0.0000|   3.7743|   0.0000|   0.0000|   0.0000|  43.0337
    The gradient of the cost functions is 0.17569146
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        510|  18.6267|  20.9630|   0.0000|   3.7588|   0.0000|   0.0000|   0.0000|  43.1869
    The gradient of the cost functions is 0.18924789
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        520|  18.9381|  20.5630|   0.0000|   3.8673|   0.0000|   0.0000|   0.0000|  43.4299
    The gradient of the cost functions is 0.41953793
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        530|  18.5727|  20.4742|   0.0000|   3.8256|   0.0000|   0.0000|   0.0000|  43.4364
    The gradient of the cost functions is 0.16154571
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        540|  18.6471|  20.1988|   0.0000|   3.7852|   0.0000|   0.0000|   0.0000|  43.5600
    The gradient of the cost functions is 0.16822931
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        550|  19.1078|  19.7741|   0.0000|   3.7892|   0.0000|   0.0000|   0.0000|  43.7854
    The gradient of the cost functions is 0.35377496
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        560|  18.6550|  19.7214|   0.0000|   3.8383|   0.0000|   0.0000|   0.0000|  43.7946
    The gradient of the cost functions is 0.95402414
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        570|  18.6798|  19.5356|   0.0000|   3.7922|   0.0000|   0.0000|   0.0000|  43.9082
    The gradient of the cost functions is 0.33137548
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        580|  18.6032|  19.3601|   0.0000|   3.8091|   0.0000|   0.0000|   0.0000|  44.0344
    The gradient of the cost functions is 0.13091625
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        590|  18.5826|  19.2729|   0.0000|   3.7949|   0.0000|   0.0000|   0.0000|  44.1102
    The gradient of the cost functions is 1.4054139
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        600|  18.5480|  19.1584|   0.0000|   3.8260|   0.0000|   0.0000|   0.0000|  44.1783
    The gradient of the cost functions is 0.96502733
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        610|  18.5711|  19.0073|   0.0000|   3.7988|   0.0000|   0.0000|   0.0000|  44.2642
    The gradient of the cost functions is 0.29668236
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        620|  18.6342|  18.7734|   0.0000|   4.4660|   0.0000|   0.0000|   0.0000|  44.4528
    The gradient of the cost functions is 0.123306185
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        630|  18.8971|  18.6655|   0.0000|   3.9119|   0.0000|   0.0000|   0.0000|  44.5188
    The gradient of the cost functions is 0.11080881
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        640|  18.5028|  18.6406|   0.0000|   3.8009|   0.0000|   0.0000|   0.0000|  44.5051
    The gradient of the cost functions is 0.27755317
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        650|  18.4992|  18.5247|   0.0000|   3.8033|   0.0000|   0.0000|   0.0000|  44.5675
    The gradient of the cost functions is 0.12016891
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        660|  18.5060|  18.4188|   0.0000|   3.8082|   0.0000|   0.0000|   0.0000|  44.6185
    The gradient of the cost functions is 1.466127
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        670|  18.5121|  18.2970|   0.0000|   3.8103|   0.0000|   0.0000|   0.0000|  44.6863
    The gradient of the cost functions is 0.11724183
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
        680|  18.5079|  18.1502|   0.0000|   3.8162|   0.0000|   0.0000|   0.0000|  44.7650
    Iterations before filter: 10
    Applying low pass filter to wind field...
    Done! Time = 546.2
    Interpolating sounding to radar grid
    Interpolated U field:
    tf.Tensor(
    [  0.60573435   1.0229144    6.434673    11.977132    12.919597
       9.719978    14.212554    17.673002     9.373551     4.932108
       7.0470777    4.581866     3.8447456    1.9784147   -2.7835784
      -4.8090096   -8.388001    -8.310871    -6.199968    -8.8743305
      -7.5828705   -6.553336    -7.493186    -8.902025   -11.6616335
     -13.175965   -15.263804   -16.580751   -17.48236    -23.17236
     -20.712376   -18.823587   -16.356308   -25.138748   -29.280111
     -28.940443   -19.437548   -10.714591    -9.689518  ], shape=(39,), dtype=float32)
    Interpolated V field:
    tf.Tensor(
    [-6.9235525  -6.326603   -6.434671   -6.9149985  -6.5828586  -3.927123
     -6.6274214  -8.241055   -9.051932   -3.2364333   0.8652741  -1.430016
      0.54577833 -1.4374017  -0.30149823  3.5418017   4.45998     5.19321
      5.667021    7.446448   10.062807   10.487528   11.109102   10.993081
      9.54446    11.055948    9.912431   11.183857    9.295537    2.4355142
     -0.723292   -1.9784379   1.1915643   5.803736    3.5951443  -2.0237138
      2.7317686   6.437976    2.7784247 ], shape=(39,), dtype=float32)
    Grid levels:
    [ 1000.  1500.  2000.  2500.  3000.  3500.  4000.  4500.  5000.  5500.
      6000.  6500.  7000.  7500.  8000.  8500.  9000.  9500. 10000. 10500.
     11000. 11500. 12000. 12500. 13000. 13500. 14000. 14500. 15000. 15500.
     16000. 16500. 17000. 17500. 18000. 18500. 19000. 19500. 20000.]
    /home/runner/work/PyDDA/PyDDA/pydda/retrieval/angles.py:24: RuntimeWarning: invalid value encountered in arccos
      elev = np.arccos((Re**2 + slantrsq - rh**2)/(2 * Re * slantr))
    Calculating weights for radars 0 and 1
    Calculating weights for models...
    Starting solver 
    rmsVR = 7.569366
    Total points: 40597
    The max of w_init is 0.0
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
          0|41415.6914|   0.0000|   0.0000|23413416.0000|   0.0000|   0.0000|   0.0000|   0.0000
    The gradient of the cost functions is 2.401797
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
         10| 116.0089|  13.4877|   0.0000| 105.0638|   0.0000|   0.0000|   0.0000|  10.6414
    The gradient of the cost functions is 0.9690954
    Iterations before filter: 10
    Applying low pass filter to wind field...
    Done! Time = 15.6
    /home/runner/work/PyDDA/PyDDA/pydda/retrieval/angles.py:24: RuntimeWarning: invalid value encountered in arccos
      elev = np.arccos((Re**2 + slantrsq - rh**2)/(2 * Re * slantr))
    Calculating weights for radars 0 and 1
    Calculating weights for models...
    Starting solver 
    rmsVR = 7.569366
    Total points: 40597
    The max of w_init is 0.0
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
          0|4141569.0000|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000
    The gradient of the cost functions is 0.59445375
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
         10|   4.2784|   9.2612|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  10.5888
    The gradient of the cost functions is 1.0234921
    Nfeval | Jvel    | Jmass   | Jsmooth |   Jbg   | Jvort   | Jmodel  | Jpoint  | Max w  
         20|   0.0058|   9.2385|   0.0000|   0.0000|   0.0000|   0.0000|   0.0000|  10.5898
    Iterations before filter: 10
    Applying low pass filter to wind field...
    Done! Time = 10.1






|

.. code-block:: default


    import pydda
    import pyart
    import cartopy.crs as ccrs
    import matplotlib.pyplot as plt


    berr_grid = pyart.io.read_grid(pydda.tests.EXAMPLE_RADAR0)
    cpol_grid = pyart.io.read_grid(pydda.tests.EXAMPLE_RADAR1)

    # Load our radar data
    sounding = pyart.io.read_arm_sonde(
        pydda.tests.SOUNDING_PATH)
    u_init, v_init, w_init = pydda.initialization.make_constant_wind_field(
        berr_grid, (0.0, 0.0, 0.0))

    # Let's make a plot on a map
    fig = plt.figure(figsize=(7, 3))

    pydda.vis.plot_xz_xsection_streamlines(
        [cpol_grid, berr_grid], bg_grid_no=-1, level=50, w_vel_contours=[1, 3, 5, 8])
    plt.show()

    # Let's provide an initial state from the sounding
    u_back = sounding[1].u_wind
    v_back = sounding[1].v_wind
    z_back = sounding[1].height
    u_init, v_init, w_init = pydda.initialization.make_wind_field_from_profile(cpol_grid, sounding[1])

    new_grids = pydda.retrieval.get_dd_wind_field([cpol_grid, berr_grid],
                                        u_init, v_init, w_init,
                                        u_back=u_back, v_back=v_back, z_back=z_back,
                                        Co=10.0, Cm=4096.0, frz=5000.0, Cb=1e-6,
                                        mask_outside_opt=False, wind_tol=0.2,
                                        engine="tensorflow")
    fig = plt.figure(figsize=(7, 7))

    pydda.vis.plot_xz_xsection_streamlines(
        new_grids,  bg_grid_no=-1, level=50, w_vel_contours=[1, 3, 5, 8])
    plt.show()
    # Let's see what happens when we use a zero initialization
    u_init, v_init, w_init = pydda.initialization.make_constant_wind_field(
        berr_grid, (0.0, 0.0, 0.0))    
    new_grids = pydda.retrieval.get_dd_wind_field([cpol_grid, berr_grid],
                                        u_init, v_init, w_init,
                                        u_back=u_back, v_back=v_back, z_back=z_back,
                                        Co=1.0, Cm=128.0, frz=5000.0, Cb=1e-6,
                                        mask_outside_opt=False, wind_tol=0.2,
                                        engine="tensorflow")

    fig = plt.figure(figsize=(7, 7))

    pydda.vis.plot_xz_xsection_streamlines(
        new_grids, bg_grid_no=-1, level=50, w_vel_contours=[1, 3, 5, 8])
    plt.show()

    # Or, let's make the radar data more important!
    new_grids = pydda.retrieval.get_dd_wind_field([cpol_grid, berr_grid],
                                        u_init, v_init, w_init,
                                        Co=100.0, Cm=128.0, frz=5000.0,
                                        mask_outside_opt=False, wind_tol=0.2,
                                        engine="tensorflow")
    fig = plt.figure(figsize=(7, 7))

    pydda.vis.plot_xz_xsection_streamlines(
        new_grids, bg_grid_no=-1, level=50, w_vel_contours=[1, 3, 5, 8])
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 9 minutes  37.852 seconds)


.. _sphx_glr_download_source_auto_examples_plot_fun_with_constraints.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_fun_with_constraints.py <plot_fun_with_constraints.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_fun_with_constraints.ipynb <plot_fun_with_constraints.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
